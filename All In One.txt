****docker Image------------------------------------------------------------------------------------------------------------

sudo su

sudo apt-get update

sudo apt-get install docker.io -y

docker --version

sudo docker pull ubuntu

sudo docker run -it -d ubuntu

sudo docker images

docker ps

sudo docker exec -it <Container-id> bash   /* 9dfd866wwrtsd4r */

apt-get update

apt-get install apache2 -y                 /* here apache2 can be replaced with any given software  */

exit /*to come back to host*/

docker ps -a

docker commit <container_id> <new_image_name>    /* this makes new image having (ubuntu+apache2)  */

docker images                    /*will have two images */

*** to rename  existing image ****

sudo docker tag <old image name > <new image name>
sudo docker rmi <old image name> 
***To add image in the docker hub ***

docker login       /* this will make connection with docker hub   and will ask for dockerusername and password   */

docker push <image_name>    /* must = dockerusername/imagename */



*******creating image using dockerfile********

mkdir dockerfile
cd dockerfile
nano dockerfile

<inside it>
				FROM ubuntu
				RUN apt-get update
				RUN apt-get install  apache2 -y
				ADD . /var/appache
				ENTRYPOINT apachectl -D FOREGROUND
				ENV name 	ApacheUBUNTU
<Save it>

ls
nano 1.html
<inside it>
           <html>
           <head><title> html1 </title></head>
           <body>
           <h3> "hellow world.."</h3>
           </body>
           </html>
<saveit>



docker build  . -t <new image name>  /* this will automatically  (pull ubuntu+run it +update it + apache ) on it

cd ..   /* back to root again

 sudo docker images
 sudo docker run -it -d -p 81:80 <Image_name>
 sudo 

*-*--*--*-*-*-*dockerSwarm-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--------------------
    1  nslookup google.com
    2  date
    3  ifconfig
    4  nslookup google.com
    5  apt-get install docker*
    6  ifconfig
    7  vi /etc/hosts
    8  nano /etc/hosts/     /* Don't use this */ 
    9  docker --version
   10  ifconfig
   11  vi /etc/hosts
   12  ping dockerworker
   13  apt-get update
   14  apt-get install apt-transport-https ca-certificates curl software-properties-common -y
   15  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   16  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   17  apt-get update
   18  apt-get install docker-ce
   19  systemctl start docker
   20  systemctl enable docker
   21  docker run hello-world
   22  docker swarm init --advertise-addr <manager node IP address>
   23  docker swarm init --advertise-addr 192.168.23.139
   24  docker node ls
   25  docker swarm join-token dockerworker -q         /* Don't use this */
   26  docker swarm join-token worker -q               /* This gives token of worker if lost */
   27  docker service create --name my-web1 --publish 8081:80 --replicas 2 nginx        /* service my-web */
   28  docker service ls
   29  docker service ps my-web1    /* list all cluster service */
   30  curl http://dockermanager:8081
   31  docker service scale my-web1=3     /* 3 clusters services */
   32  docker service ls
   33  docker service ps my-web1
   34  docker service ps 
   35  docker service ls
   36  docker service ps my-web1
   37  history
*-*--*--*-*-*-*-*-*-*-*-GitHub*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--------------------

   56  history
   57  sudo apt-get install git-core
   58  git --version
   59  mkdir newgitfolder
   60  cd newgitfolder
   61  git config --global user.name "yuvrajawalekar"
   62  git config --global user.email "yuvrajawalekar@gmail.com"
   74  git config --global color.ui true
   75  git config --global color.status auto
   76  git config --global color.branch auto
   78  git config --list
   82  ls
   83  nano testFile1.txt
   84  nano testFile2.txt
   85  git status
   91  git init
   92  ls
   93  git status
   94  git add testFile1.txt
   95  git add testFile2.txt
   96  git status
   98  git commit -m "Commiting to the gitHUB"       /* Message is compulsory for commit */
   99  git status
  109  git remote add origin https://github.com/yuvrajawalekar/GitFinal.git
  110  git pull origin master
  111  git push https://github.com/yuvrajawalekar/GitFinal.git
  112  git branch
  113  git branch extrabranch
  115  git checkout extrabranch
  116  git branch
  117  ls
  118  nano insidebranch.txt
  119  ls
  120  git add insidebranch.txt
  121  git commit -m "insideNewBranc"
  122  git push https://github.com/yuvrajawalekar/GitFinal.git
  123  git merge extrabranch
  124  history
*-*--*--*-*-*-*-*-*-*-*-*-*-JenKins*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--------------------

  107  ifconfig
  108  apt-get update      
  /* Install docker if not installed */
  109  wget -q -O -https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
  110  sudo apt install openjdk-8-jdk
  111  wget -q -O -https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
  112  wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
  113  echo deb http://pkg.jenkins.io/debian-stable binary/| sudo tee /etc/apt/sources.list.d/jenkins.list
  114  sudo apt-get update
  115  sudo apt-get install jenkins
  116  history
  117  sudo systemctl start jenkins
  118  sudo systemctl status jenkins
  119  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  120  history
*-*--*--*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--------------------